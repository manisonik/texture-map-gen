#pragma once
#include "stdafx.h"

namespace Manisonik {
	enum class Keys : uint32_t
	{
		LButton = 0x01,
		RButton = 0x02,
		Cancel = 0x03,
		MButton = 0x04,
		XButton1 = 0x05,
		XButton2 = 0x06,
		Back = 0x08,
		Tab = 0x09,
		Clear = 0x0C,
		Return = 0x0D,
		Shift = 0x10,
		Control = 0x11,
		Menu = 0x12,
		Pause = 0x13,
		Capital = 0x14,
		Kana = 0x15,
		Hanguel = 0x15,
		Hangul = 0x15,
		IME_On = 0x16,
		Junja = 0x17,
		Final = 0x18,
		Hanja = 0x19,
		Kanji = 0x19,
		IME_Off = 0x1A,
		Escape = 0x1B,
		Convert = 0x1C,
		NonConvert = 0x1D,
		Accept = 0x1E,
		ModeChange = 0x1F,
		Space = 0x20,
		Prior = 0x21,
		Next = 0x22,
		End = 0x23,
		Home = 0x24,
		Left = 0x25,
		Up = 0x26,
		Right = 0x27,
		Down = 0x28,
		Select = 0x29,
		Print = 0x2A,
		Execute = 0x2B,
		Snapshot = 0x2C,
		Insert = 0x2D,
		Delete = 0x2E,
		Help = 0x2F,
		D0 = 0x30,
		D1 = 0x31,
		D2 = 0x32,
		D3 = 0x33,
		D4 = 0x34,
		D5 = 0x35,
		D6 = 0x36,
		D7 = 0x37,
		D8 = 0x38,
		D9 = 0x39,
		A = 0x41,
		B = 0x42,
		C = 0x43,
		D = 0x44,
		E = 0x45,
		F = 0x46,
		G = 0x47,
		H = 0x48,
		I = 0x49,
		J = 0x4A,
		K = 0x4B,
		L = 0x4C,
		M = 0x4D,
		N = 0x4E,
		O = 0x4F,
		P = 0x50,
		Q = 0x51,
		R = 0x52,
		S = 0x53,
		T = 0x54,
		U = 0x55,
		V = 0x56,
		W = 0x57,
		X = 0x58,
		Y = 0x59,
		Z = 0x5A,
		LWin = 0x5B,
		RWin = 0x5C,
		Apps = 0x5D,
		Sleep = 0x5F,
		Numpad0 = 0x60,
		Numpad1 = 0x61,
		Numpad2 = 0x62,
		Numpad3 = 0x63,
		Numpad4 = 0x64,
		Numpad5 = 0x65,
		Numpad6 = 0x66,
		Numpad7 = 0x67,
		Numpad8 = 0x68,
		Numpad9 = 0x69,
		Multiply = 0x6A,
		Add = 0x6B,
		Separator = 0x6C,
		Subtract = 0x6D,
		Decimal = 0x6E,
		Divide = 0x6F,
		F1 = 0x70,
		F2 = 0x71,
		F3 = 0x72,
		F4 = 0x73,
		F5 = 0x74,
		F6 = 0x75,
		F7 = 0x76,
		F8 = 0x77,
		F9 = 0x78,
		F10 = 0x79,
		F11 = 0x7A,
		F12 = 0x7B,
		F13 = 0x7C,
		F14 = 0x7D,
		F15 = 0x7E,
		F16 = 0x7F,
		F17 = 0x80,
		F18 = 0x81,
		F19 = 0x82,
		F20 = 0x83,
		F21 = 0x84,
		F22 = 0x85,
		F23 = 0x86,
		F24 = 0x87,
		Numlock = 0x90,
		Scroll = 0x91,
		LShift = 0xA0,
		RShift = 0xA1,
		LControl = 0xA2,
		RControl = 0xA3,
		LMenu = 0xA4,
		RMenu = 0xA5,
		Browser_Back = 0xA6,
		Browser_Forward = 0xA7,
		Browser_Refresh = 0xA8,
		Browser_Stop = 0xA9,
		Browser_Search = 0xAA,
		Browser_Favorites = 0xAB,
		Browser_Home = 0xAC,
		Volume_Mute = 0xAD,
		Volume_Down = 0xAE,
		Volume_Up = 0xAF,
		Media_Next_Track = 0xB0,
		Media_Prev_Track = 0xB1,
		Media_Stop = 0xB2,
		Media_Play_Pause = 0xB3,
		Launch_Mail = 0xB4,
		Launch_Media_Select = 0xB5,
		Launch_App1 = 0xB6,
		Launch_App2 = 0xB7,
		OEM_1 = 0xBA,
		OEM_Plus = 0xBB,
		OEM_Comma = 0xBC,
		OEM_Minus = 0xBD,
		OEM_Period = 0xBE,
		OEM_2 = 0xBF,
		OEM_3 = 0xC0,
		OEM_4 = 0xDB,
		OEM_5 = 0xDC,
		OEM_6 = 0xDD,
		OEM_7 = 0xDE,
		OEM_8 = 0xDF,
		OEM_102 = 0xE2,
		ProcessKey = 0xE5,
		Packet = 0xE7,
		Attn = 0xF6,
		CRSel = 0xF7,
		EXSel = 0xF8,
		EREOF = 0xF9,
		Play = 0xFA,
		Zoom = 0xFB,
		NoName = 0xFC,
		PA1 = 0xFD,
		OEM_Clear = 0xFE,
	};

	enum class MouseButton
	{
		ButtonLeft = 1,
		ButtonRight = 2,
		None = 0,
		ButtonMiddle = 16
	};

	enum MskShaderType
	{
		Vertex = GL_VERTEX_SHADER,
		Fragment = GL_FRAGMENT_SHADER,
		Geometry = GL_GEOMETRY_SHADER
	};

	enum MskTextureFilter {
		Linear = GL_LINEAR,
		MipMap = GL_MIPMAP,
		MipMapLinearLinear = GL_LINEAR_MIPMAP_LINEAR,
		MipMapLinearNearest = GL_LINEAR_MIPMAP_NEAREST,
		MipMapNearestLinear = GL_NEAREST_MIPMAP_LINEAR,
		MipMapNearestNearest = GL_NEAREST_MIPMAP_NEAREST,
		Nearest = GL_NEAREST
	};

	enum MskTextureWrap {
		ClampToEdge = GL_CLAMP_TO_EDGE,
		MirroredRepeat = GL_MIRRORED_REPEAT,
		Repeat = GL_REPEAT
	};

	enum MskTextureFormat {
		Red = GL_RED,
		RG = GL_RG,
		RGB = GL_RGB,
		BGR = GL_BGR,
		RGBA = GL_RGBA,
		BGRA = GL_BGRA,
		RedInteger = GL_RED_INTEGER,
		RGInteger = GL_RG_INTEGER,
		RGBInteger = GL_RGB_INTEGER,
		BGRInteger = GL_BGR_INTEGER,
		RGBAInteger = GL_RGBA_INTEGER,
		BGRAInteger = GL_BGRA_INTEGER,
		Stencil = GL_STENCIL_INDEX,
		DepthComponent = GL_DEPTH_COMPONENT,
		DepthStencil = GL_DEPTH_STENCIL
	};

	enum MskTextureTarget {
		OneDimension = GL_TEXTURE_1D,
		TwoDimension = GL_TEXTURE_2D,
		ThreeDimension = GL_TEXTURE_3D,
		Recta = GL_TEXTURE_RECTANGLE,
		Buffer = GL_TEXTURE_BUFFER,
		CubeMap = GL_TEXTURE_CUBE_MAP,
		OneDimensionArray = GL_TEXTURE_1D_ARRAY,
		TwoDimensionArray = GL_TEXTURE_2D_ARRAY,
		CubeMapArray = GL_TEXTURE_CUBE_MAP_ARRAY,
		Multisample = GL_TEXTURE_2D_MULTISAMPLE,
		MultisampleArray = GL_TEXTURE_2D_MULTISAMPLE_ARRAY
	};
}